name: Create CLI Release

on:
  workflow_dispatch #temp disable
  # pull_request:
  #   branches:
  #     - main
  #   types: [closed]

permissions:
  contents: read

jobs:
  create-release:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/') && github.repository_owner == 'getsentry' }}
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - id: get-release-vars
        name: Configure Release Vars
        run: |
          release_version=v$(grep -E "version = \"[0-9]+\.[0-9]+\.[0-9]+\"" codecov-cli/pyproject.toml | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+")
          previous_version=$(git tag --sort=-creatordate | head -n 1) # The most recent tag (since the tag for the new release has not yet been created)
          echo "release_version=$release_version"
          echo "previous_version=$previous_version"

          echo "release_version=$release_version" >> "$GITHUB_OUTPUT"
          echo "previous_version=$previous_version" >> "$GITHUB_OUTPUT"

      - name: Get auth token
        id: token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.SENTRY_RELEASE_BOT_CLIENT_ID }}
          private-key: ${{ secrets.SENTRY_RELEASE_BOT_PRIVATE_KEY }}

      # todo: potentially switch to https://github.com/getsentry/action-prepare-release once set up with craft
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
        run: |
          gh release create ${{ steps.get-release-vars.outputs.release_version }} --title "Release ${{ steps.get-release-vars.outputs.release_version }}" --notes "Autogenerated for ${{ steps.get-release-vars.outputs.release_version }}. Created for ${{ github.event.pull_request.html_url }}" --generate-notes --notes-start-tag ${{steps.get-release-vars.outputs.previous_version}} --target ${{ github.event.pull_request.head.sha }}
